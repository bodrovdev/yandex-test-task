/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./src/js/index.js":
/*!*************************!*\
  !*** ./src/js/index.js ***!
  \*************************/
/***/ (() => {

eval("if (window.innerWidth < 768) {\n  document.querySelectorAll('.steps__item--desktop').forEach(item => {\n    item.remove();\n  });\n}\ndocument.addEventListener('DOMContentLoaded', function () {\n  const circle = document.querySelector('.header__circle');\n  const city = document.querySelector('.header__city-img');\n  const chess = document.querySelectorAll('.header__chess');\n  setTimeout(() => {\n    city.classList.add('header__city-img--loaded');\n  }, 500);\n  setTimeout(() => {\n    circle.classList.add('header__circle--loaded');\n  }, 1500);\n  setTimeout(() => {\n    circle.classList.add('header__circle--spinning');\n  }, 4500);\n  setTimeout(() => {\n    chess.forEach((item, index) => {\n      setTimeout(() => {\n        item.classList.add('header__chess--loaded');\n      }, (index + 1) * 500);\n    });\n  }, 1500);\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  const slider = document.querySelector('.part__carousel');\n  const slides = Array.from(document.querySelectorAll('.part__carousel-item'));\n  const nextButton = document.querySelector('.part__carousel-button-right');\n  const prevButton = document.querySelector('.part__carousel-button-left');\n  const slideWidth = slides[0].getBoundingClientRect().width;\n  const isDesktop = window.innerWidth >= 1280;\n  slides.forEach((item, index) => item.setAttribute('data-slide', index + 1));\n  const currentIndex = document.querySelector('.part__carousel-buttons-current');\n  currentIndex.innerHTML = isDesktop ? 3 : 1;\n  const totalIndex = document.querySelector('.part__carousel-buttons-total');\n  totalIndex.innerHTML = \" / \".concat(slides.length);\n  const setSlidePosition = (slide, index) => {\n    isDesktop ? slide.style.left = (slideWidth + 20) * index + 'px' : slide.style.left = slideWidth * index + 'px';\n  };\n  slides.forEach(setSlidePosition);\n  const moveToSlide = (slider, currentSlide, targetSlide) => {\n    slider.style.transform = 'translateX(-' + targetSlide.style.left + ')';\n    currentSlide.classList.remove('current-slide');\n    targetSlide.classList.add('current-slide');\n  };\n  prevButton.addEventListener('click', () => {\n    if (isDesktop) {\n      currentIndex.innerHTML > 3 ? currentIndex.innerHTML-- : currentIndex.innerHTML = slides.length;\n    } else {\n      currentIndex.innerHTML > 1 ? currentIndex.innerHTML-- : currentIndex.innerHTML = slides.length;\n    }\n    const currentSlide = slider.querySelector('.current-slide');\n    const prevSlide = isDesktop ? currentSlide.previousElementSibling || slides[3] : currentSlide.previousElementSibling || slides[slides.length - 1];\n    moveToSlide(slider, currentSlide, prevSlide);\n  });\n  nextButton.addEventListener('click', () => {\n    if (isDesktop) {\n      currentIndex.innerHTML < slides.length ? currentIndex.innerHTML++ : currentIndex.innerHTML = 3;\n    } else {\n      currentIndex.innerHTML < slides.length ? currentIndex.innerHTML++ : currentIndex.innerHTML = 1;\n    }\n    const currentSlide = slider.querySelector('.current-slide');\n    const nextSlide = isDesktop ? currentSlide.nextElementSibling.dataset.slide === '5' ? slides[0] : currentSlide.nextElementSibling || slides[0] : currentSlide.nextElementSibling || slides[0];\n    moveToSlide(slider, currentSlide, nextSlide);\n  });\n});\ndocument.addEventListener('DOMContentLoaded', function () {\n  if (window.innerWidth >= 1024) {\n    return;\n  } else {\n    const tabsBody = document.querySelector('.steps__wrapper');\n    const tabsPagination = document.querySelector('.steps__pagination-bullets');\n    const tabsBullets = document.querySelectorAll('.steps__pagination-bullet');\n    const prevButton = document.querySelector('.steps__pagination-left');\n    const nextButton = document.querySelector('.steps__pagination-right');\n    function checkDisabledArrows() {\n      if (Array.from(tabsBullets)[0].classList.contains('steps__pagination-bullet--active')) {\n        prevButton.classList.add('steps__pagination-left--disabled');\n      } else if (Array.from(tabsBullets)[tabsBullets.length - 1].classList.contains('steps__pagination-bullet--active')) {\n        nextButton.classList.add('steps__pagination-right--disabled');\n      } else {\n        [prevButton, nextButton].forEach(item => {\n          item.classList.remove('steps__pagination-left--disabled');\n          item.classList.remove('steps__pagination-right--disabled');\n        });\n      }\n    }\n    function changeTab(current, next, currentBullet, nextBullet) {\n      if (next && next.tagName === 'DIV' && nextBullet) {\n        current.classList.remove('steps__item--active');\n        next.classList.add('steps__item--active');\n        currentBullet.classList.remove('steps__pagination-bullet--active');\n        nextBullet.classList.add('steps__pagination-bullet--active');\n      } else {\n        return;\n      }\n    }\n    Array.from(document.querySelectorAll('.steps__item--mobile-carousel'))[0].classList.add('steps__item--active');\n    Array.from(document.querySelectorAll('.steps__pagination-bullet'))[0].classList.add('steps__pagination-bullet--active');\n    checkDisabledArrows();\n    prevButton.addEventListener('click', () => {\n      const currentTab = tabsBody.querySelector('.steps__item--active');\n      const currentBullet = tabsPagination.querySelector('.steps__pagination-bullet--active');\n      const prevTab = currentTab.previousElementSibling;\n      const prevBullet = currentBullet.previousElementSibling;\n      changeTab(currentTab, prevTab, currentBullet, prevBullet);\n      checkDisabledArrows();\n    });\n    nextButton.addEventListener('click', () => {\n      const currentTab = tabsBody.querySelector('.steps__item--active');\n      const currentBullet = tabsPagination.querySelector('.steps__pagination-bullet--active');\n      const nextTab = currentTab.nextElementSibling;\n      const nextBullet = currentBullet.nextElementSibling;\n      changeTab(currentTab, nextTab, currentBullet, nextBullet);\n      checkDisabledArrows();\n    });\n  }\n});\n\n//# sourceURL=webpack://gulp-starter/./src/js/index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./src/js/index.js"]();
/******/ 	
/******/ })()
;